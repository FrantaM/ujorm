package org.ujorm2.metamodel;

import java.time.LocalDateTime;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import org.ujorm2.Key;
import org.ujorm2.core.AbstractDomainModel;
import org.ujorm2.core.KeyFactory;
import org.ujorm2.core.KeyFactoryProvider;
import org.ujorm2.core.UjoContext;
import org.ujorm2.doman.Item;
import org.ujorm2.doman.User;

/**
 * TODO: A helper class generated by a Maven module.
 * @author Pavel Ponec
 */
public class MetaUser<D> extends AbstractDomainModel<D, User> {

    /** All direct keys */
    protected static final class DirectKeys<D> implements KeyFactoryProvider {

        final KeyFactory<User> keyFactory = new KeyFactory(User.class);

        final Key<User, Integer> id = keyFactory.newKey(
                (d) -> d.getId(),
                (d, v) -> d.setId(v));

        final Key<User, Short> pin = keyFactory.newKey(
                (d) -> d.getPin(),
                (d, v) -> d.setPin(v));

        final Key<User, String> firstName = keyFactory.newKey(
                (d) -> d.getFirstName(),
                (d, v) -> d.setFirstName(v));

        final MetaOrder<User> sureName = keyFactory.newRelation(
                (d) -> d.getSureName(),
                (d, v) -> d.setSureName(v));

        final Key<User, LocalDateTime> born = keyFactory.newKey(
                (d) -> d.getBorn(),
                (d, v) -> d.setBorn(v));

        final MetaUser<User> parent = keyFactory.newRelation(
                (d) -> d.getParent(),
                (d, v) -> d.setParent(v));

        @Override
        public KeyFactory getKeyFactory() {
            return keyFactory;
        }
    };

    public MetaUser() {
        super(new DirectKeys());
    }

    public MetaUser(@Nonnull Key<D,?> keyPrefix) {
        super(keyPrefix);
    }

    @Override
    public D createDomain() {
        return (D) new Item();
    }

    /** Provider of an instance of DirectKeys */
    private DirectKeys key() {
        return (DirectKeys) directKeys;
    }

    // --- KEY PROVIDERS ---

    public Key<D, Integer> id() {
        return getKey(key().id);
    }

    public Key<D, Short> pin() {
        return getKey(key().pin);
    }

    public Key<D, String> firstName() {
        return getKey(key().firstName);
    }

    public Key<D, String> sureName() {
        return getKey(key().sureName);
    }

    public Key<D, LocalDateTime> born() {
        return getKey(key().born);
    }

    public MetaUser<D> parent() {
        return (MetaUser) getKey(key().parent);
    }

    public static final MetaUser<User> of(@Nullable UjoContext context) {
        return new MetaUser<>();
    }
}
