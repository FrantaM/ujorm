package org.ujorm2.metamodel;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import javax.annotation.Nullable;
import org.ujorm2.Key;
import org.ujorm2.core.KeyImpl;
import org.ujorm2.core.MetaInterface;
import org.ujorm2.core.UjoContext;
import org.ujorm2.core.lambda.Getter;
import org.ujorm2.core.lambda.Setter;
import org.ujorm2.doman.Order;
import org.ujorm2.doman.Order.State;
import org.ujorm2.doman.User;

/**
 * TODO: A helper class generated by a Maven module.
 * @author Pavel Ponec
 */
public class MetaOrder<D> extends KeyImpl<D, Order> implements MetaInterface<D> {


    private final Key<D, Integer> id;
    private final Key<D, State> state;
    private final Key<D, BigDecimal> totalPrice;
    private final MetaUser<D> user;
    private final Key<D, String> note;
    private final Key<D, LocalDateTime> created;

    public MetaOrder(Class<D> domainClass, UjoContext context) {
        super(domainClass, context);

        // Init the keys:
        final Setter<Order, Integer> idSetter = (domain, value) -> domain.setId(value);
        final Getter<Order, Integer> idGetter = (domain) -> domain.getId();
        id = context.createKey(domainClass, Integer.class, idSetter, idGetter);


        state = context.createKey(domainClass, State.class, null, null);
        totalPrice = context.createKey(domainClass, BigDecimal.class, null, null);
        user = (MetaUser<D>) context.createEntity(domainClass, User.class, null, null);
        note = context.createKey(domainClass, String.class, null, null);
        created = context.createKey(domainClass, LocalDateTime.class, null, null);
    }

    public Key<D, Integer> id() {
        return id;
    }

    public Key<D, State> state() {
        return state;
    }

    public  Key<D, BigDecimal> totalPrice() {
        return totalPrice;
    }

    public MetaUser<D> user() {
        return user;
    }

    public Key<D, String> note() {
        return note;
    }

    public Key<D, LocalDateTime> created() {
        return created;
    }

    @Override
    public D createDomain() {
        return (D) new Order();
    }

    public static final MetaOrder<Order> of(@Nullable UjoContext context) {
        return context.getMetaModel(Order.class, MetaOrder.class);
    }

    public static final MetaOrder<Order> of() {
        return of(UjoContext.of());
    }

}
