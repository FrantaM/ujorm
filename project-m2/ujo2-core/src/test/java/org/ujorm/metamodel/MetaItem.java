package org.ujorm.metamodel;

import java.math.BigDecimal;
import javax.annotation.Nullable;
import org.ujorm.Key;
import org.ujorm.core.AbstractKey;
import org.ujorm.core.KeyFactory;
import org.ujorm.core.MetaInterface;
import org.ujorm.core.UjoContext;
import org.ujorm.doman.*;

/**
 * TODO: A helper class generated by a Maven module.
 * @author Pavel Ponec
 */
public class MetaItem<D> extends AbstractKey<D, Item> implements MetaInterface<D> {


    private final KeyFactory<Item> keyFactory = new KeyFactory(Item.class);

    private final Key<Item, Integer> id = keyFactory.newKey("", (d, v) -> d.setId(v), d -> d.getId());

    private final Key<Item, String> note = null;

    private final Key<Item, BigDecimal> price = null;

    private final MetaOrder<Item> order = null;

    private final Key<Item, Boolean> descending$ = null;

    private final Key<Item, Integer> codePoints = null;

    public MetaItem(Class<D> domainClass, UjoContext context) {
        super(domainClass, context);
    }

    // - - - -

    public Key<Item, Integer> id() {
        return id;
    }

    public Key<Item, String> note() {
        return null;
    }

    public Key<Item, BigDecimal> price() {
        return null;
    }

    public MetaOrder<Item> order() {
        return null;
    }

    public Key<D, Boolean> descending$() {
        return null;
    }

    public Key<D, Integer> codePoints$() {
        return null;
    }

    // ---- Helper method

    @Override
    public D newDomain() {
        return (D) new Item();
    }

    public static final MetaItem<Item> of(@Nullable UjoContext context) {
        return context.getMetaModel(Item.class, MetaItem.class);
    }

    public static final MetaItem<Item> of() {
        return of(UjoContext.of());
    }


}
